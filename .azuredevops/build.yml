jobs:
  - job: ${{ parameters.name }}
    displayName: CI build for ${{ parameters.displayName }}

    pool:
      vmImage: ${{ parameters.vmImage }}

    steps:
      - checkout: self
        clean: true
        lfs: true

      - task: UseDotNet@2
        displayName: Use .NET Core SDK ${{ parameters.dotNetCoreVersion }}
        inputs:
          version: ${{ parameters.dotNetCoreVersion }}

      - powershell: dotnet tool restore
        displayName: .NET Tool Restore

      - powershell: dockerd --tlsverify --tlscacert=ca.pem --tlscert=server-cert.pem --tlskey=server-key.pem -H=localhost:2376
        displayName: Expose Docker Daemon Tls Endpoint

      - powershell: dotnet cake --target=Restore-NuGet-Packages
        displayName: Prepare

      - powershell: dotnet cake --target=Build
        displayName: Build

      - powershell: dotnet cake --target=Tests --test-filter='${{ parameters.testFilter }}'
        displayName: Tests

      - powershell: Get-ChildItem -Path . -Include *.log -Recurse | % { Get-Content -Path $_.FullName }
        displayName: Logs

      - powershell: Get-ChildItem -Path 'test-coverage' -Filter *.xml | Rename-Item -NewName { $_.Name -Replace 'coverage.net5.0', '${{ parameters.displayName }}'.ToLower() }
        displayName: Rename Test And Coverage Results

      - powershell: "@('test-results', 'test-coverage') | % { Copy-Item -Path $_ -Destination '$(Build.ArtifactStagingDirectory)' -Recurse }"
        displayName: Copy Test And Coverage Results To Staging Directory

      - task: PublishPipelineArtifact@1
        displayName: Publish Test And Coverage Results
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)
          artifactName: ${{ parameters.displayName }}.TestAndCoverageResults
